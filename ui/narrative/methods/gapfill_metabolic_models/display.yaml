#
# Define basic display information
#
name     : MS2 - Improved Gapfill Metabolic Models
tooltip  : |
    Identify the minimal set of biochemical reactions to add to draft metabolic models to enable them to produce a desired flux in a specified media.

screenshots :
    - Gapfill_eq_1.jpg
    - Gapfill_eq_2.jpg

#
# Define the set of other narrative methods that should be suggested to the user.
#
suggestions :
    apps:
        related :
            []
        next :
            []
    methods:
        related :
            []
        next :
            [run_flux_balance_analysis]

#
# Configure the display and description of the parameters
#
parameters :
    default_objective :
        ui-name : |
            Reaction to activate
        short-hint : |
            ID of reaction that must carry flux in the gapfilled models.

    model_list :
        ui-name : |
            Models to gapfill
        short-hint : |
            A list of metabolic models that are to be gapfilled.

    media_list :
        ui-name : |
            Medias for gapfilling (defaults to AuxoMedia)
        short-hint : |
            Media specifies the set of chemical compounds the organism can use for its growth. In this function, the media is used as the growth condition for gapfilling, if gapfilling is performed. If none is specified, Complete media is used. The “Complete” media is an abstraction of what’s available in our biochemistry database. Every compound that can be transported into the extracellular compartment–or, in other words, for which a transport reaction is available–is used in the complete media. This list is built in real-time, meaning that whenever you run FBA with complete media, the available transporters are parsed from the media database–and is therefore not stored permanently in any media object in the workspace.
        placeholder : |
            Growth conditions for gapfilling
            
    change_to_complete :
        ui-name : |
            Change default media to Complete
        short-hint : |
            Use Complete media instead of AuxoMedia as the default media
    
    exclude_reactions :
        ui-name : |
            Reactions to exclude from gapfilling
        short-hint : |
            Reactions to exclude from the candidates to be gapfilled.

    suffix :
        ui-name : |
            Output suffix
        short-hint : |
            Suffix that should be added to the model name when the gapfilled model is saved

    minimum_objective :
        ui-name : |
            Minimum objective
        short-hint : |
            The minimum objective value that the specified target reaction must achieve in the gapfilled model.

    source_models :
        ui-name : |
            Source Gapfill Models
        short-hint : |
            The source gapfill models can be used to add additional reactions and compounds in gapfilling that are not found in the default KBase gapfilling database. The default gapfill database will still be utilized, but it will be expanded with reactions in the source model.
    
    atp_safe :
        ui-name : |
            ATP safe gapfilling
        short-hint : |
            Do not gapfill a reaction that changes the energy biosythesis processes in the models.
            
    forced_atp_list :
        ui-name : |
            Forced ATP media
        short-hint : |
            Forces the model to produce ATP in the specified media
            
    gapfilling_mode :
        ui-name : |
            Gapfilling type
        short-hint : |
            Specifies the gapfilling approach: cumulative means building up a solution as each new condition is gapfilled; independent means keeping every solution independent; global means gapfilling all conditions at once.

    expression_refs :
        ui-name : |
            Expression datasets
        short-hint : |
            Feature value matrices to be used in OMEGGA method to aid in selecting gene candidates for gapfilled reactions

    expression_conditions :
        ui-name : |
            Expression conditions
        short-hint : |
            Optional list of columns within the expression dataset to use with OMEGGA method. If no conditions are specified within an expression dataset, all the columnns will be used.

icon: modelseed-teal.png

description : |
    <p>This App allows a user to identify the minimal set of biochemical reactions missing in a draft metabolic model. It then fills in missing reactions in the model based on media stoichiometry to enable the modeled organism to produce biomass in a specified media.</p>

    <p>Draft metabolic models usually have missing reactions due to incomplete or incorrect functional genome annotations. As a result, these models are unable to generate biomass on media where the organism typically is capable of growing. Gapfilling algorithms can be used to overcome this problem. These algorithms tentatively bridge gaps in metabolic pathways by identifying the minimal number of biochemical reactions to add to the draft metabolic model, thereby enabling it to produce biomass in a specified media. Note that gapfilled reactions are assertions based on annotations missed by the standard annotation pipeline, including the missed genes that encode these functions.</p>

    <p>Starting with a draft metabolic model, <a href=”https://kbase.us/data-upload-download-guide/fba-model/”>imported</a> or generated by the <a href=”https://narrative.kbase.us/#appcatalog/app/fba_tools/build_metabolic_model/release”>Build Metabolic Model App</a>, we can apply the Gapfill Metabolic Model App to identify and fill all the gaps in the metabolic pathways of our models that might prevent the production of biomass for the organism or community. This is achieved by one of two ways: (i) relaxing reversibility constraints on the model’s reactions or (ii) adding new reactions to the existing model. In this gapfilling process, the model is augmented to include all (i.e., about 13,000) biochemical reactions contained in the ModelSEED [1] database (available for download from <a href=”https://github.com/ModelSEED/ModelSEEDDatabase/blob/master/Biochemistry/reactions.master.tsv”>GitHub</a>). The database consists of reactions from KEGG, MetaCyc, EcoCyc, plant BioCyc, Plant Metabolic Networks, and Gramene.<p>

    <p>During the gapfilling process, all reactions determined to be thermodynamically reversible [2-4] are adjusted to be reversible in the gapfilled metabolic model. Finally, flux balance analysis (FBA) [5] is performed to generate a flux profile that prioritizes the production of biomass while minimizing the flux through all reactions and reaction directions that were added in the gapfilling process. This method is consistent with previously published algorithms for gapfilling reaction networks [6,7]. All reactions and reaction directions generated by these algorithms that were not included in the drat model and have a nonzero flux are them added to the gapfilled model. This gapfilling solution subsequently permits growth of the metabolic model in the specified media condition. To see the reactions and reaction directions added by the gapfilling process, click the “Reactions” tab in the output table, and sort it by the “Gapfilling” column title.

    <p>The detailed 2-step gapfilling algorithm is illustrated in the first image at the top of this detail page (see above) and described below.</p>

    <p>The objective function (2.1 and 2.4) minimizes the number of reactions, which are not present in the model but should be added for biomass to be produced in those conditions. Since, in this case, there is a false negative prediction, at least one reaction will need to be added.</p>

    <p>In the formulation, all reactions are treated as reversible, with every reversible reaction being decomposed into two reactions in each direction, one in the forward direction and the other in the backward direction. This allows for the independent addition of each direction in the algorithm. As a result of this, reactions represented in the formulation are the forward and backward components of the reactions in the database. In the objective function, <strong><i>r<sub>gapfilling</sub></i></strong> represents the total number of reactions in the database; in objective function (2.1), <strong><i>v<sub>i</sub></i></strong> is the flux through reaction <strong><i>i</i></strong>; in objective function (2.4) <strong><i>Z<sub>i</sub></i></strong> is a binary variable equal to zero if the flux through reaction <strong><i>i</i></strong> is zero and one otherwise; and, <strong><i>&lambda;<sub>gapfill,i</sub></i></strong> is a constant value stating the energy cost associated of adding reaction  to the model. If reaction <strong><i>i</i></strong> is already present in the model, <strong><i>&lambda;<sub>gapfill,i</sub></i></strong> is zero. Otherwise, <strong><i>&lambda;<sub>gapfill,i</sub></i></strong> is calculated using equation (2.8). This equation is illustrated in the second image at the top of this detail page (see above) and described below.<p>

    <p>Each of the <i>P</i> variables in equation (2.8) is binary, representing a penalty applied when adding different types of reactions to the model: they are equal to one if the penalty applies to the type of the particular reaction and equal to zero otherwise.</p>
    <ul>
      <li><i>P<sub>KEGG,i</sub></i> is related to reactions not in KEGG.</li>
      <li><i>P<sub>structure,i</sub></i> to the addition of reactions involving metabolites with unknown structure.</li>
      <li><i>P<sub>known-&Delta;G,i</sub></i> to reactions for which cannot be calculated.</li>
      <li><i>P<sub>unfavorable,i</sub></i>  to reactions operating in an unfavorable direction.</li>
    </ul>
    </p>

    <p>Equation (2.2 and 2.5) implements the mass balance constraints related to the steady-state assumption of FBA. Here, <strong><i>N<sub>reactionDB</sub></i></strong> is the stoichiometric matrix, and <strong><i>v</i></strong> flux vector through reaction database.</p>

    <p>Equation (2.6) enforces the bounds on reaction fluxes (<strong><i>v<sub>i</sub></i></strong>), and the values of the reaction use variables (<strong><i>Z<sub>i</sub></i></strong>). This equation ensures that each reaction flux, <strong><i>v<sub>i</sub></i></strong>, is zero unless <strong><i>Z<sub>i</sub></i></strong> is one. The <strong><i>v<sub>max,i</sub></i></strong> term in equation (2.6) is the core to the simulation using FBA. If <strong><i>v<sub>max,i</sub></i></strong> corresponds to a reaction associated with a knocked-out gene, <strong><i>v<sub>max,i</sub></i></strong> is set to zero. If <strong><i>v<sub>max,i</sub></i></strong> corresponds to the uptake of a nutrient not in the medium, <strong><i>v<sub>max,i</sub></i></strong> is also set to zero.</p>

    <p>Equation (2.3 and 2.7) constrains the biomass flux, <strong><i>v<sub>bio</sub></i></strong>, to a nonzero value, to ensure growth.</p>

    <p>The result of the gapfilling optimization includes a list of irreversible reactions from the model that should be made reversible and a set of reactions not in the model that should be added to fix a false negative prediction.</p>

    <p>This App has been created as part of a suite of tools and data that support the reconstruction, prediction, and design of metabolic networks in KBase. For more help with metabolic modeling, please view the <a href=”http://kbase.us/metabolic-modeling-in-kbase/”>Metabolic Modeling FAQ</a>.</p>

    <p><strong>Team members who developed & deployed algorithm in KBase:</strong>
    Chris Henry, Janaka Edirisinghe, Sam Seaver, and Neal Conrad. For questions please <a href="https://www.kbase.us/support/">contact us</a>.</p>


publications :
    -
        display-text: |
            [1] Henry CS, DeJongh M, Best AA, Frybarger PM, Linsay B, Stevens RL. High-throughput generation, optimization and analysis of genome-scale metabolic models. Nat Biotechnol. 2010;28: 977–982. doi:10.1038/nbt.1672
        link: https://www.nature.com/articles/nbt.1672

    -
        display-text: |
            [2] Henry CS, Jankowski MD, Broadbelt LJ, Hatzimanikatis V. Genome-Scale Thermodynamic Analysis of Escherichia coli Metabolism. Biophysical Journal. 2006;90: 1453–1461. doi:10.1529/biophysj.105.071720
        link: https://www.cell.com/biophysj/abstract/S0006-3495(06)72335-9

    -
        display-text: |
            [3] Jankowski MD, Henry CS, Broadbelt LJ, Hatzimanikatis V. Group Contribution Method for Thermodynamic Analysis of Complex Metabolic Networks. Biophysical Journal. 2008;95: 1487–1499. doi:10.1529/biophysj.107.124784
        link: https://www.cell.com/biophysj/abstract/S0006-3495(08)70215-7

    -
        display-text: |
            [4] Henry CS, Zinner JF, Cohoon MP, Stevens RL. iBsu1103: a new genome-scale metabolic model of Bacillus subtilisbased on SEED annotations. Genome Biology. 2009;10: R69. doi:10.1186/gb-2009-10-6-r69
        link: https://genomebiology.biomedcentral.com/articles/10.1186/gb-2009-10-6-r69

    -
        display-text: |
            [5] Orth JD, Thiele I, Palsson BØ. What is flux balance analysis? Nature Biotechnology. 2010;28: 245–248. doi:10.1038/nbt.1614
        link: https://www.nature.com/articles/nbt.1614

    -
        display-text: |
            [6] Latendresse M. Efficiently gap-filling reaction networks. BMC Bioinformatics. 2014;15: 225. doi:10.1186/1471-2105-15-225
        link: https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-225

    -
        display-text: |
            [7] Dreyfuss JM, Zucker JD, Hood HM, Ocasio LR, Sachs MS, Galagan JE. Reconstruction and Validation of a Genome-Scale Metabolic Model for the Filamentous Fungus Neurospora crassa Using FARM. PLOS Computational Biology. 2013;9: e1003126. doi:10.1371/journal.pcbi.1003126
        link: https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003126
