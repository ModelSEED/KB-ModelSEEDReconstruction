#
# Define basic display information
#
name     : MS2 - Build Prokaryotic Metabolic Models

tooltip  : |
    Using ModelSEED2 pipeline, construct draft metabolic models based on input annotated genomes.

screenshots : []


#
# Define the set of other narrative methods that should be suggested to the user.
#
suggestions :
    apps:
        related :
            []
        next :
            []
    methods:
        related :
            []
        next :
            [gapfill_metabolic_model,run_flux_balance_analysis]


#
# Configure the display and description of the parameters
#
parameters :
    genome_refs :
        ui-name : |
            Genome or Genome Set
        short-hint : |
            A genome or genome set with RAST annotations 
        placeholder : |
            Genomes for modeling

    suffix :
        ui-name : |
            Suffix for output models
        short-hint : |
            Suffix placed on the genome names when the completed model is saved. Must have a value.
    
    run_gapfilling :
        ui-name : |
            Gapfill models?
        short-hint : |
            Run gapfilling on models for a set of specified media conditions to ensure biomass production.

    gapfilling_media_list :
        ui-name : |
            Gapfilling Medias (defaults to AuxoMedia)
        short-hint : |
            Media specifies the set of chemical compounds the organism can use for its growth. If gapfilling is performed, these medias are used as the growth condition for gapfilling. If no media is specified, AuxoMedia is used, which is a media containing glucose plus all amino acids and vitamins.
        placeholder : |
            Growth conditions for gapfilling

    change_to_complete :
        ui-name : |
            Change default media to Complete
        short-hint : |
            Use Complete media instead of AuxoMedia as the default media

    atp_safe :
        ui-name : |
            Apply ATP check?
        short-hint : |
            Check this box if ATP correction is to be applied after initial model reconstruction.
        placeholder : |
            Check model ATP production

    forced_atp_list :
        ui-name : |
            Media to ensure ATP production
        short-hint : |
            Specify specific media conditions in which your model should produce ATP.

    gs_template :
        ui-name : |
            Template for reconstruction
        short-hint : |
            Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses three template models: (i) Gram positive microbe, (ii) Gram negative microbe, and(iii) Core pathways prokaryote. These template models differ from each other by biomass composition and biochemical reaction functional associations. The “automatic selection” option attempts to classify organisms as gram negative or gram positive based on specific functional roles (e.g. cell wall) linked to gram stain differentiation. Previous versions of templates are also available for reproducibility.The automatic selection feature will always use the latest version of the templates.

    gs_template_ref :
        ui-name : |
            Custom template for reconstruction
        short-hint : |
            Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses three template models: (i) Gram positive microbe, (ii) Gram negative microbe, and(iii) Core pathways prokaryote. These template models differ from each other by biomass composition and biochemical reaction functional associations. The “automatic selection” option attempts to classify organisms as gram negative or gram positive based on specific functional roles (e.g. cell wall) linked to gram stain differentiation. Previous versions of templates are also available for reproducibility.This input enables users to specify their own custom template for use in model reconstruction.

    core_template_ref :
        ui-name : |
            Custom core template for reconstruction
        short-hint : |
            Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses three template models: (i) Gram positive microbe, (ii) Gram negative microbe, and(iii) Core pathways prokaryote. These template models differ from each other by biomass composition and biochemical reaction functional associations. The “automatic selection” option attempts to classify organisms as gram negative or gram positive based on specific functional roles (e.g. cell wall) linked to gram stain differentiation. Previous versions of templates are also available for reproducibility.This input enables users to specify their own custom core template for use in model reconstruction.

    gapfilling_mode :
        ui-name : |
            Gapfilling type
        short-hint : |
            Specifies the gapfilling approach: cumulative means building up a solution as each new condition is gapfilled; independent means keeping every solution independent; global means gapfilling all conditions at once.

    expression_refs :
        ui-name : |
            Expression datasets
        short-hint : |
            Feature value matrices to be used in OMEGGA method to aid in selecting gene candidates for gapfilled reactions

    expression_conditions :
        ui-name : |
            Expression conditions
        short-hint : |
            Optional list of columns within the expression dataset to use with OMEGGA method. If no conditions are specified within an expression dataset, all the columnns will be used.

icon: modelseed-teal.png

description : |

    <p>The Build Metabolic Model App was implemented in KBase to enable users to build genome-scale metabolic models (GEMs) based on the ModelSEED Pipeline for  genomes they have imported or generated with other tools in the system. This overview of the ModelSEED pipeline [1] details the steps for automated reconstruction of GEMs using the Build Metabolic Model App in KBase.</p>

    <p>To use the Build Metabolic Model App with a genome uploaded into KBase, the genome must first be annotated or re-annotated using the RAST functional ontology (<a href="https://narrative.kbase.us/#catalog/apps/RAST_SDK/annotate_contigset/release">Annotate Microbial Assembly </a>or <a href="https://narrative.kbase.us/#catalog/apps/RAST_SDK/reannotate_microbial_genome/release">Annotate Microbial Genome</a>) before users can build a draft metabolic model for an organism. This is necessary because the SEED functional annotations generated by RAST [2] are linked directly to the biochemical reactions in the <a href="https://github.com/ModelSEED/ModelSEEDDatabase/blob/master/Biochemistry/">ModelSEED biochemistry database</a>, which is used by KBase for metabolic modeling. It is important to note that the RAST annotation services are <strong>not developed to annotate Eukaryotic organisms</strong>. We have implemented different modeling strategies for modeling Plants and Fungi. For plants, users may instead use the <a href="https://narrative.kbase.us/#catalog/apps/kb_orthofinder/annotate_plant_transcripts/release">Annotate Plant Enzymes with OrthoFinder App</a>. For fungi, please refer to the stand alone <a href="https://narrative.kbase.us/#catalog/apps/kb_fungalmodeling/built_fungal_model/release">Build Fungal Model App</a> for details.</p>

    <p>Once a genome has been annotated using the RAST functional ontology, it can be fed into the pipeline for preliminary reconstruction, wherein the RAST annotations are used to generate draft metabolic models. Draft metabolic models are comprised of a reaction network complete with gene-protein-reaction (GPR) associations, predicted Gibbs free energy of reaction values, and the biomass reaction. The biomass reaction includes non-universal cofactors, lipids, and cell wall components. The biomass reaction is organism-specific, based on a biomass reaction template, which uses the SEED subsystems and RAST functional annotations to assign non-universal (e.g., cofactors, cell wall components) biomass components that represent unique biological functions exhibited by a large set of organisms or specific to a small set of organisms.</p>

    <p>In order for an organism-specific biomass component to be added to the biomass reaction, its genome must contain the proper subsystems and annotations specified in the template. The GPR associations represent the mapping between the biochemical reactions and the standardized functional roles assigned to genes during the RAST annotation. This mapping allows the pipeline to differentiate between cases where protein products from multiple genes form a complex to catalyze a reaction, and cases where protein products from multiple genes can independently catalyze the same reaction. The draft model includes all reactions associated with one or more enzymes encoded in the genome that are identified in the annotations. Additionally, spontaneous reactions are added during this step. All templates used for model reconstruction can be found in <a href="https://github.com/ModelSEED/ModelSEEDTemplates">Github</a>.</p>

    <p>With the 2.0.0 release the ATP production was improved in the model reconstruction procedure by constructing core models, testing for proper ATP production from this core, then ensuring that ATP production does not incorrectly explode when expanding the core model to a genome-scale model. We similarly improved our gapfilling approach to ensure that gapfilling does not cause a model to start over-producing ATP. Model reconstruction using the “classic” pipeline without the new ATP production method is still available and can be used by turning ON the advanced parameter “classic mode” (OFF by default).<p>
    
    <p>Gapfilling is the process by which the App identifies the minimal set of biochemical reactions to add to a draft metabolic model to enable it to produce biomass in a specified media. This step is optional, but it is recommended and runs by default. A radio box in the advanced options of the Build Metabolic Model App can be unchecked to allow model reconstruction without gapfilling. To gapfill the draft metabolic model or to perform additional gapfilling analysis please see the <a href="https://narrative.kbase.us/#appcatalog/app/fba_tools/gapfill_metabolic_model/release">Gapfill Metabolic Model App</a>.</p>

    <p>The quality of a draft metabolic model depends on the completeness of the annotated genome used for the preliminary reconstruction. Due to the fact that most genomes are not completely annotated, draft metabolic models usually contain gaps preventing the production of some biomass components. In this step, an optimization algorithm identifies the minimal set of reactions that must be added to each model to fill these gaps [3, 4]. The gapfilling algorithm is described in detail in the <a href="https://narrative.kbase.us/#appcatalog/app/fba_tools/gapfill_metabolic_model/release">Gapfill Metabolic Model App page</a>. Reactions to be used by gapfilling are selected from the <a href="https://github.com/ModelSEED/ModelSEEDDatabase/tree/master/Biochemistry">ModelSEED biochemistry database</a>. This curated database contains mass and charge balanced reactions, standardized to aqueous conditions at neutral pH. The ModelSEED reaction database integrates biochemistry contained in KEGG, MetaCyc, EcoCyc, Plant BioCyc, Plant Metabolic Networks, and Gramene. This step is conducted to ensure that every model is capable of simulating cell growth.</p>

    <p>Once model reconstruction is complete, <a href="https://narrative.kbase.us/#appcatalog/app/fba_tools/run_flux_balance_analysis/release">Flux Balance Analysis</a> (FBA) can be applied to assess the capacity of reactions to carry flux and reaction essentiality.<p>

    <p>For additional information about metabolic modeling, visit the <a href="https://kbase.us/metabolic-modeling-faq/">Metabolic Modeling in KBase FAQ</a>.<p>

    <p><strong>Team members who developed & deployed algorithm in KBase:</strong>
    Chris Henry, Janaka Edirisinghe, Sam Seaver, José P. Faria and Neal Conrad. For questions, please <a href="https://www.kbase.us/support/">contact us</a>.</p>


publications :
    -
        display-text: |
            [1] Henry CS, DeJongh M, Best AA, Frybarger PM, Linsay B, Stevens RL. High-throughput generation, optimization and analysis of genome-scale metabolic models. Nat Biotechnol. 2010;28: 977–982. doi:10.1038/nbt.1672
        link: https://www.ncbi.nlm.nih.gov/pubmed/20802497

    -
        display-text: |
            [2] Overbeek R, Olson R, Pusch GD, Olsen GJ, Davis JJ, Disz T, et al. The SEED and the Rapid Annotation of microbial genomes using Subsystems Technology (RAST). Nucleic Acids Res. 2014;42: D206–D214. doi:10.1093/nar/gkt1226
        link: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3965101/

    -
        display-text: |
            [3] Latendresse M. Efficiently gap-filling reaction networks. BMC Bioinformatics. 2014;15: 225. doi:10.1186/1471-2105-15-225
        link: https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-225

    -
        display-text: |
            [4] Dreyfuss JM, Zucker JD, Hood HM, Ocasio LR, Sachs MS, Galagan JE. Reconstruction and Validation of a Genome-Scale Metabolic Model for the Filamentous Fungus Neurospora crassa Using FARM. PLOS Computational Biology. 2013;9: e1003126. doi:10.1371/journal.pcbi.1003126
        link: https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003126

    -
        display-text: |
            [5] Mahadevan R, Schilling CH. The effects of alternate optimal solutions in constraint-based genome-scale metabolic models. Metab Eng. 2003;5: 264–276.
        link: https://www.ncbi.nlm.nih.gov/pubmed/14642354
